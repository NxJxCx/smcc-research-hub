import e from"/jsx/admin/addthesis";import{CellAlign as t,Table as o,TableCellType as i,TableRowAction as n}from"/jsx/admin/table";import l from"/jsx/global/modal";import r from"/jsx/global/pdfviewer";import{React as s,Sweetalert2 as a}from"/jsx/imports";const c=[{label:"#",key:"id",sortable:!0,filterable:!0,cellType:i.Number,align:t.Center},{label:"Date Created",key:"created_at",sortable:!0,cellType:i.Date,align:t.Center},{label:"Title",key:"title",sortable:!0,cellType:i.String,align:t.Center},{label:"Author",key:"author",sortable:!0,cellType:i.String,align:t.Center},{label:"Year",key:"year",sortable:!0,cellType:i.Number,align:t.Center},{label:"Department",key:"department",sortable:!0,cellType:i.String,align:t.Center},{label:"Course",key:"course",sortable:!0,cellType:i.String,align:t.Center},{label:"Reads",key:"reads",sortable:!0,cellType:i.Number,align:t.Center},{label:"Status",key:"is_public",sortable:!0,cellType:i.Custom,align:t.Center},{label:"Action",key:"action",sortable:!1,cellType:i.Custom,align:t.Center}];export default function d(){const[t,i]=s.useState(!1),[d,u]=s.useState(""),[m,h]=s.useState(""),[p,y]=s.useState(""),[f,b]=s.useState([]),C=()=>{fetch("/api/thesis/all").then((e=>e.json())).then((({success:e,error:t})=>{t?console.log(t):b(e.map((e=>({id:e.id,created_at:e.created_at,title:e.title,author:e.author,year:e.year,department:e.department,course:e.course,reads:e.reads||0,is_public:{value:e.is_public?"Yes":"No",content:e.is_public?s.createElement("button",{type:"button",className:"bg-white px-3 py-2 text-green-700 font-bold rounded-2xl leading-[14.63px] text-[12px]",onClick:()=>{a.fire({icon:"question",title:"Do you want to hide this thesis to the public?",confirmButtonText:"Yes, Hide Thesis",confirmButtonColor:"#3085d6",showDenyButton:!0,denyButtonText:"No, Cancel",denyButtonColor:"#d33",showLoaderOnConfirm:!0,preConfirm:async()=>{try{const t=new URL("/api/thesis/publish",window.location.origin),o=await fetch(t,{method:"POST",body:JSON.stringify({id:e.id,is_public:!1}),headers:{"Content-Type":"application/json",Accept:"application/json"}});if(!o.ok){const{error:e}=await o.json();return a.showValidationMessage("Failed: "+e)}return o.json()}catch(e){a.showValidationMessage("Failed: "+e)}},allowOutsideClick:()=>!a.isLoading()}).then((e=>{e.isConfirmed&&(e.value?.error?a.fire({icon:"error",title:"Error",text:"Failed to make thesis hidden: "+e.value.error,timer:3e3,toast:!0,position:"center"}):(a.fire({icon:"success",title:"Thesis Hidden Successfully",timer:3e3,toast:!0,position:"center"}),C()))}))}},"Public"):s.createElement("button",{type:"button",className:"bg-white px-3 py-2 text-red-500 rounded-2xl font-[500] leading-[14.63px] text-[12px]",onClick:()=>{a.fire({icon:"question",title:"Do you want to display this thesis publicly?",confirmButtonText:"Yes, Display Thesis publicly",confirmButtonColor:"#3085d6",showDenyButton:!0,denyButtonText:"No, Cancel",denyButtonColor:"#d33",showLoaderOnConfirm:!0,preConfirm:async()=>{try{const t=new URL("/api/thesis/publish",window.location.origin),o=await fetch(t,{method:"POST",body:JSON.stringify({id:e.id,is_public:!0}),headers:{"Content-Type":"application/json",Accept:"application/json"}});if(!o.ok){const{error:e}=await o.json();return a.showValidationMessage("Failed: "+e)}return o.json()}catch(e){a.showValidationMessage("Failed: "+e)}},allowOutsideClick:()=>!a.isLoading()}).then((e=>{e.isConfirmed&&(e.value?.error?a.fire({icon:"error",title:"Error",text:"Failed to make thesis public: "+e.value.error,timer:3e3,toast:!0,position:"center"}):(a.fire({icon:"success",title:"Thesis Publicly Displayed Successfully",timer:3e3,toast:!0,position:"center"}),C()))}))}},"Hidden")},action:s.createElement(n,{id:e.id,onView:t=>{t===e.id&&(h(e.title),y("Author/s: "+e.author+" ("+e.year+")"),u(new URL(`/read${e.url}`,window.location.origin).toString()))},onDelete:e=>{a.fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete thesis!"}).then((({isConfirmed:t})=>{t&&fetch(`/api/thesis/delete?id=${e}`,{method:"DELETE"}).then((e=>e.json())).then((({success:e,error:t})=>{e?(C(),a.fire({icon:"success",title:"Deleted!",text:"Thesis has been deleted successfully.",timer:3e3})):(console.log(t),a.fire({icon:"error",title:"Error",text:"Failed to delete thesis: "+t,confirmButtonText:"Try Again"}))})).catch((e=>{console.log(e),a.fire({icon:"error",title:"Error",text:"Failed to delete thesis",timer:3e3})}))}))}})}))))})).catch((e=>{console.log(e),a.fire({icon:"error",title:"Error",text:"Failed to fetch thesis list",confirmButtonText:"Try Again",showCancelButton:!0}).then((({isConfirmed:e})=>{e&&setTimeout((()=>C()),50)}))}))};return s.useEffect((()=>{d||(h(""),y(""))}),[d]),s.useEffect((()=>{C()}),[]),s.createElement("div",{className:"w-full min-h-[calc(100vh-160px)] h-fit bg-[#37414e] p-4 min-w-fit"},s.createElement("h1",{className:"text-white text-2xl my-2"},"Thesis/Capstone List"),s.createElement(o,{columns:c,items:f},s.createElement("div",{className:"px-4"},s.createElement("button",{type:"button",onClick:()=>C(),className:"hover:text-yellow-500",title:"Refresh List"},s.createElement("span",{className:"material-symbols-outlined"},"refresh"))),s.createElement("div",{className:"px-4"},s.createElement("button",{type:"button",onClick:()=>i(!0),className:"hover:text-yellow-500",title:"Add Thesis"},s.createElement("span",{className:"material-symbols-outlined"},"add"))),s.createElement(e,{open:t,onClose:()=>i(!1),onSuccess:()=>C(),className:"absolute right-3 top-full mt-4 shadow-lg"})),s.createElement(l,{open:!!d,onClose:()=>u(null),content:s.createElement(r,{src:d}),header:m,showCancelButton:!1,showConfirmButton:!1,footer:p}))}