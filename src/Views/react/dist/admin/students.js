import{CellAlign as e,Table as t,TableCellType as a,TableRowAction as l}from"/jsx/admin/table";import{Courses as r,Departments as n,Year as o}from"/jsx/global/enums";import{Input as s,Select as c}from"/jsx/global/input";import i from"/jsx/global/modal";import{React as u,Sweetalert2 as m}from"/jsx/imports";const d=[{label:"Student ID",key:"student_id",sortable:!0,filterable:!0,cellType:a.Number,align:e.Center},{label:"Full Name",key:"full_name",sortable:!0,cellType:a.String,align:e.Center},{label:"Email Address",key:"email",sortable:!0,cellType:a.String,align:e.Center},{label:"Department",key:"department",sortable:!0,cellType:a.String,align:e.Center},{label:"Course",key:"course",sortable:!0,cellType:a.String,align:e.Center},{label:"Year",key:"year",sortable:!0,cellType:a.Number,align:e.Center},{label:"Date Registered",key:"created_at",sortable:!0,cellType:a.Date,align:e.Center},{label:"Action",key:"action",sortable:!1,cellType:a.Custom,align:e.Center}];function b({formData:e,onChange:t}){return u.createElement("div",{className:"p-8"},u.createElement(s,{disabled:!0,label:"Student ID",inputClassName:"border-black",className:"mb-2",labelColor:"black",name:"edit_student_id",placeholder:"Student ID",value:e.username,onChange:a=>t({...e,username:a.target.value})}),u.createElement(s,{disabled:!0,label:"Full Name",inputClassName:"border-black",className:"mb-2",labelColor:"black",name:"edit_full_name",placeholder:"Full Name",value:e.full_name,onChange:a=>t({...e,full_name:a.target.value}),required:!0}),u.createElement(s,{type:"email",label:"Email Address",inputClassName:"border-black",className:"mb-2",labelColor:"black",name:"edit_email",placeholder:"Email Address",value:e.email,onChange:a=>t({...e,email:a.target.value}),required:!0}),u.createElement(c,{labelColor:"black",items:Object.entries(n).map((([e,t])=>({label:t,value:t}))),label:"Department",name:"edit_department",placeholder:"Department",value:e.department,onChange:a=>t({...e,department:a.target.value}),required:!0}),u.createElement(c,{labelColor:"black",items:Object.entries(r).map((([e,t])=>({label:t,value:t}))),label:"Course",name:"edit_course",placeholder:"Course",value:e.course,onChange:a=>t({...e,course:a.target.value}),required:!0}),u.createElement(c,{labelColor:"black",items:Object.entries(o).map((([e,t])=>({label:t,value:t}))),label:"Year",name:"edit_year",placeholder:"Year",value:e.year,onChange:a=>t({...e,year:a.target.value}),required:!0}),u.createElement(s,{type:"password",label:"Password",inputClassName:"border-black",className:"mb-2",labelColor:"black",name:"edit_password",placeholder:"Password (Leave blank if not change)",value:e.password,onChange:a=>t({...e,password:a.target.value})}))}export default function p(){const[e,a]=u.useState([]),[s,c]=u.useState({account:"student",username:"",full_name:"",email:"",password:"",department:n.CCIS,course:r.BSIT,year:o.FirstYear}),p=u.useCallback((()=>{c({account:"student",username:"",full_name:"",email:"",password:"",department:n.CCIS,course:r.BSIT,year:o.FirstYear})}),[]),[f,C]=u.useState(!1),h=u.useCallback((e=>{c({account:"student",username:e.student_id,full_name:e.full_name,email:e.email,password:"",department:e.department,course:e.course,year:e.year}),C(!0)}),[]),g=()=>{fetch("/api/student/all").then((e=>e.json())).then((({success:e,error:t})=>{t?console.log(t):a(e.map((e=>({student_id:e.student_id,created_at:e.created_at,full_name:e.full_name,email:e.email,year:e.year,department:e.department,course:e.course,action:u.createElement(l,{id:e.student_id,onEdit:t=>{t===e.student_id&&h(e)},onDelete:e=>{console.log("ON DELETE STUDENT ID:",e),m.fire({title:"Are you sure?",text:"You won't be able to revert this!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete student account!"}).then((({isConfirmed:t})=>{t&&fetch(`/api/student/delete?id=${e}`,{method:"DELETE"}).then((e=>e.json())).then((({success:e,error:t})=>{e?(g(),m.fire({icon:"success",title:"Deleted!",text:"Student account has been deleted successfully.",timer:3e3})):(console.log(t),m.fire({icon:"error",title:"Error",text:"Failed to delete student account: "+t,confirmButtonText:"Try Again"}))})).catch((e=>{console.log(e),m.fire({icon:"error",title:"Error",text:"Failed to delete student account",timer:3e3})}))}))}})}))))})).catch((e=>{console.log(e),m.fire({icon:"error",title:"Error",text:"Failed to fetch student list",confirmButtonText:"Try Again",showCancelButton:!0}).then((({isConfirmed:e})=>{e&&setTimeout((()=>g()),50)}))}))};u.useEffect((()=>{g()}),[]);const y=u.useCallback((async e=>{console.log(s);try{const t=await fetch("/api/update",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)}),a=await t.json();a.success?(e(),p(),m.fire({icon:"success",title:"Success",text:"Student account has been updated successfully.",timer:3e3}),setTimeout((()=>g()),100)):m.fire({icon:"error",title:"Failed",text:a.error})}catch(t){console.log(t),m.fire({icon:"error",title:"Error",text:"Failed to update student account",confirmButtonText:"Try Again",showCancelButton:!0}).then((({isConfirmed:t})=>{t&&setTimeout((()=>y(e)),100)}))}}),[s]);return u.createElement(u.Fragment,null,u.createElement("div",{className:"w-full min-h-[calc(100vh-160px)] h-fit bg-[#37414e] p-4 min-w-fit"},u.createElement("h1",{className:"text-white text-2xl my-2"},"Student List"),u.createElement(t,{columns:d,items:e},u.createElement("div",{className:"px-4"},u.createElement("button",{type:"button",onClick:()=>g(),className:"hover:text-yellow-500",title:"Refresh List"},u.createElement("span",{className:"material-symbols-outlined"},"refresh"))))),u.createElement(i,{open:f,header:"Edit Student Account",content:u.createElement(b,{formData:s,onChange:c}),onConfirm:y,onCancel:p,onClose:()=>C(!1)}))}